{"version":3,"sources":["../node_modules/@ionic/core/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ groupOptions: {} namespace object","../node_modules/ionicons/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ groupOptions: {} namespace object","components/Transactions.jsx","pages/Home.jsx","App.jsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.jsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","Transactions","newBlock","class","number","transactions","transaction","index","hash","value","Web3","require","web3","providers","WebsocketProvider","Home","useState","setNewBlock","subscription","setSubscription","toastMsg","setToastMsg","subscribe","useCallback","subRef","eth","error","result","on","blockHeader","a","getBlock","block","etherValue","utils","fromWei","parseFloat","sort","transactionA","transactionB","toString","console","log","unSubscribe","unsubscribe","success","useEffect","color","fullscreen","length","miner","totalDifficulty","className","name","onClick","isOpen","Boolean","duration","message","onWillDismiss","App","exact","path","to","window","location","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"uGAAA,IAAIA,EAAM,CACT,8BAA+B,CAC9B,IACA,GAED,uBAAwB,CACvB,IACA,GAED,uBAAwB,CACvB,IACA,GAED,0BAA2B,CAC1B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,wBAAyB,CACxB,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,sBAAuB,CACtB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,mCAAoC,CACnC,IACA,IAED,uBAAwB,CACvB,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,wBAAyB,CACxB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,uBAAwB,CACvB,IACA,GAED,uBAAwB,CACvB,IACA,IAED,yBAA0B,CACzB,IACA,GAED,8BAA+B,CAC9B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,sBAAuB,CACtB,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,gCAAiC,CAChC,IACA,KAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAMX,EAAIE,GAAMU,EAAKD,EAAI,GAC7B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","file":"static/js/main.13ac3935.chunk.js","sourcesContent":["var map = {\n\t\"./ion-action-sheet.entry.js\": [\n\t\t561,\n\t\t5\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t562,\n\t\t6\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t563,\n\t\t7\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t564,\n\t\t17\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t565,\n\t\t18\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t566,\n\t\t43\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t567,\n\t\t19\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t568,\n\t\t20\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t569,\n\t\t21\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t570,\n\t\t22\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t571,\n\t\t44\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t572,\n\t\t10\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t573,\n\t\t23\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t574,\n\t\t45\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t575,\n\t\t46\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t576,\n\t\t24\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t577,\n\t\t25\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t578,\n\t\t26\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t579,\n\t\t27\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t580,\n\t\t28\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t581,\n\t\t8\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t582,\n\t\t14\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t583,\n\t\t9\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t584,\n\t\t29\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t585,\n\t\t30\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t586,\n\t\t31\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t587,\n\t\t11\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t588,\n\t\t16\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t589,\n\t\t47\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t590,\n\t\t32\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t591,\n\t\t33\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t592,\n\t\t34\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t593,\n\t\t35\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t594,\n\t\t48\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t595,\n\t\t13\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t596,\n\t\t49\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t597,\n\t\t36\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t598,\n\t\t15\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t599,\n\t\t37\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t600,\n\t\t38\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t601,\n\t\t39\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t602,\n\t\t12\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t603,\n\t\t50\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 248;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t604,\n\t\t57\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 250;\nmodule.exports = webpackAsyncContext;","import { IonGrid, IonRow, IonCol, IonText } from \"@ionic/react\";\nconst Transactions = ({ newBlock }) => {\n  return (\n    <IonGrid>\n      <IonRow class='header-row'>\n        <IonCol>\n          <IonText>\n            {\" \"}\n            All transactions for block no. {newBlock.number} sorted by amount in\n            the descending order.\n          </IonText>\n        </IonCol>\n      </IonRow>\n      {newBlock.transactions.map((transaction, index) => {\n        return (\n          <IonRow key={index}>\n            <IonCol>\n              <IonText>{transaction.hash}</IonText>\n            </IonCol>\n\n            <IonCol>\n              <IonText>{transaction.value + \" ether\"}</IonText>\n            </IonCol>\n          </IonRow>\n        );\n      })}\n    </IonGrid>\n  );\n};\n\nexport default Transactions;\n","import {\n  IonContent,\n  IonHeader,\n  IonPage,\n  IonTitle,\n  IonToolbar,\n  IonGrid,\n  IonRow,\n  IonCol,\n  IonText,\n  IonToast,\n  IonButton,\n  IonSpinner,\n} from \"@ionic/react\";\nimport { Fragment, useCallback, useEffect, useState } from \"react\";\nimport Transactions from \"../components/Transactions\";\nimport \"./Home.css\";\n\nconst Web3 = require(\"web3\");\nconst web3 = new Web3(\n  new Web3.providers.WebsocketProvider(\n    \"wss://mainnet.infura.io/ws/v3/7b08509ad8d54176a5e69c5bf0b2bf6f\"\n  )\n);\n\nconst Home = () => {\n  const [newBlock, setNewBlock] = useState({});\n  const [subscription, setSubscription] = useState({});\n\n  const [toastMsg, setToastMsg] = useState(\"\");\n\n  const subscribe = useCallback(() => {\n    const subRef = web3.eth\n      .subscribe(\"newBlockHeaders\", (error, result) => {\n        if (error) {\n          setToastMsg(\"Error connecting to ETH blockchain.\");\n        }\n        if (!error) {\n          return;\n        }\n      })\n      .on(\"connected\", () => {\n        setToastMsg(\" You are connected to the ETH blockchain.\");\n        setSubscription(subRef);\n      })\n      .on(\"data\", async (blockHeader) => {\n        if (blockHeader.number !== null) {\n          try {\n            const block = await web3.eth.getBlock(blockHeader.number, true);\n\n            let transactions = block.transactions.map((transaction) => {\n              const etherValue = Web3.utils.fromWei(transaction.value, \"ether\");\n              transaction.value = parseFloat(etherValue);\n              return transaction;\n            });\n            transactions.sort(\n              (transactionA, transactionB) =>\n                transactionB.value - transactionA.value\n            );\n            block.transactions = transactions;\n\n            setNewBlock(block);\n          } catch (e) {\n            setToastMsg(e.toString());\n          }\n        }\n      })\n      .on(\"error\", () => {\n        setToastMsg(\"Error connecting to ETH blockchain.\");\n      });\n    console.log(\"ref\", subRef);\n  }, []);\n  const unSubscribe = useCallback(() => {\n    subscription.unsubscribe((error, success) => {\n      if (success) {\n        setToastMsg(\"Successfully unsubscribed!\");\n        setSubscription({});\n      } else {\n        setToastMsg(\"Unable to unsubscribed!\");\n      }\n    });\n  }, [subscription]);\n  useEffect(() => {\n    subscribe();\n  }, []);\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar color='primary'>\n          <IonTitle>Ethereum Blockchain Network Stat</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent fullscreen>\n        <IonGrid class='ion-text-center'>\n          <IonRow class='ion-margin'>\n            <IonCol>\n              <IonTitle>\n                <IonText color='default'>Ethereum latest blocks</IonText>\n              </IonTitle>\n            </IonCol>\n          </IonRow>\n\n          <IonRow class='header-row'>\n            <IonCol>\n              <IonText>Block Number</IonText>\n            </IonCol>\n\n            <IonCol>\n              <IonText>Number of transactions</IonText>\n            </IonCol>\n\n            <IonCol>\n              <IonText>Miner (address that mined the block)</IonText>\n            </IonCol>\n            <IonCol>\n              <IonText>Total difficulty</IonText>\n            </IonCol>\n          </IonRow>\n          {newBlock.number ? (\n            <IonRow>\n              <IonCol>\n                <IonText>{newBlock.number}</IonText>\n              </IonCol>\n\n              <IonCol>\n                <IonText>\n                  {newBlock.transactions ? newBlock.transactions.length : \"\"}\n                </IonText>\n              </IonCol>\n\n              <IonCol>\n                <IonText>{newBlock.miner}</IonText>\n              </IonCol>\n              <IonCol>\n                <IonText>{newBlock.totalDifficulty}</IonText>\n              </IonCol>\n            </IonRow>\n          ) : (\n            <IonRow className='ion-justify-content-center ion-align-items-center'>\n              <IonSpinner name='crescent' />\n              <IonText>\n                waiting for latest block to be created on the blockchain.\n              </IonText>\n            </IonRow>\n          )}\n        </IonGrid>\n        <IonButton\n          color='warning'\n          onClick={() => {\n            if (subscription.id) {\n              unSubscribe();\n            } else {\n              subscribe();\n            }\n          }}\n        >\n          {subscription.id ? \"Pause\" : \"Resume\"}\n        </IonButton>\n        {newBlock.number ? <Transactions newBlock={newBlock} /> : <Fragment />}\n\n        <IonToast\n          isOpen={Boolean(toastMsg)}\n          duration={4000}\n          message={toastMsg}\n          color={\"dark\"}\n          onWillDismiss={() => {\n            setToastMsg(\"\");\n          }}\n        ></IonToast>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default Home;\n","import { Redirect, Route } from \"react-router-dom\";\nimport { IonApp, IonRouterOutlet } from \"@ionic/react\";\nimport { IonReactRouter } from \"@ionic/react-router\";\nimport Home from \"./pages/Home\";\n\n/* Core CSS required for Ionic components to work properly */\nimport \"@ionic/react/css/core.css\";\n\n/* Basic CSS for apps built with Ionic */\nimport \"@ionic/react/css/normalize.css\";\nimport \"@ionic/react/css/structure.css\";\nimport \"@ionic/react/css/typography.css\";\n\n/* Optional CSS utils that can be commented out */\nimport \"@ionic/react/css/padding.css\";\nimport \"@ionic/react/css/float-elements.css\";\nimport \"@ionic/react/css/text-alignment.css\";\nimport \"@ionic/react/css/text-transformation.css\";\nimport \"@ionic/react/css/flex-utils.css\";\nimport \"@ionic/react/css/display.css\";\n\n/* Theme variables */\nimport \"./theme/variables.css\";\n\nconst App = () => (\n  <IonApp>\n    <IonReactRouter>\n      <IonRouterOutlet>\n        <Route exact path='/network-stat'>\n          <Home />\n        </Route>\n        <Route exact path='/'>\n          <Redirect to='/network-stat' />\n        </Route>\n      </IonRouterOutlet>\n    </IonReactRouter>\n  </IonApp>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}